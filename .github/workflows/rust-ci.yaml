name: CI

on:
  workflow_call:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    steps:
    - uses: actions/checkout@v3

    - uses: extractions/setup-just@v1
      with:
        just-version: 0.10.2  # optional semver specification, otherwise latest

    - name: Cargo Cache
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          ${{ runner.os }}-cargo

    - name: Cargo Target Cache
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
          ${{ runner.os }}-cargo-target

 #   - name: Setup tmate session
 #     uses: mxschmitt/action-tmate@v3
 #     if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug_enabled }}

    - name: Run tests
      run: |
        [ $(which just) ] && just test || cargo test --verbose --all

  clippy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    steps:

    - uses: docker://agilepathway/pull-request-label-checker:latest
      with:
        none_of: wip
        repo_token: ${{ secrets.GITHUB_TOKEN }}
      if: github.event_name == 'pull_request'

    - uses: actions/checkout@v3

    - name: Cargo Cache
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-${{ hashFiles('Cargo.toml') }}
          ${{ runner.os }}-cargo

    - name: Cargo Target Cache
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
        restore-keys: |
          ${{ runner.os }}-cargo-target-${{ hashFiles('Cargo.toml') }}
          ${{ runner.os }}-cargo-target

    - name: Run cargo-clippy
      run: |
        cargo clippy -- -D warnings

  coverage:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || !github.event.pull_request.draft }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 30

      - uses: extractions/setup-just@v1
        with:
          just-version: 0.10.2  # optional semver specification, otherwise latest

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Build backend dockers used in coverage testing
        run: |
          [ $(which just) ] && just build True || true

      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.20.1'
          args: '-- --test-threads 1'

      - name: Upload to codecov.io
        uses: codecov/codecov-action@v3.1.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: cobertura.xml 
